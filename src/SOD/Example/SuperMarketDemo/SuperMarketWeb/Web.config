<?xml version="1.0"?>

<configuration>
	<appSettings>
		<!--PDF.NET SQL 日志记录配置（for 4.0）开始
        记录执行的SQL语句，关闭此功能请将SaveCommandLog 设置为False，或者设置DataLogFile 为空；
        如果DataLogFile 的路径中包括~符号，表示SQL日志路径为当前Web应用程序的根目录；
        如果DataLogFile 不为空且为有效的路径，当系统执行SQL出现了错误，即使SaveCommandLog 设置为False，会且仅仅记录出错的这些SQL语句；
        如果DataLogFile 不为空且为有效的路径，且SaveCommandLog 设置为True，则会记录所有的SQL查询。
        在正式生产环境中，如果不需要调试系统，请将SaveCommandLog 设置为False 。
    -->
		<add key="SaveCommandLog" value="True" />
		<add key="DataLogFile" value="~\SqlLog.txt" />
		<!--LogExecutedTime 需要记录的时间，如果该值等于0会记录所有查询，否则只记录大于该时间的查询。单位毫秒。-->
		<add key="LogExecutedTime" value="0" />
		<!--PDF.NET SQL 日志记录配置 结束-->
	</appSettings>
	<connectionStrings>
		<!-- 本程序默认使用最后一个有效地连接定义，请注释其它连接字符串
    如果使用MySQL,SQLite 等数据库，需要把本解决方案里面相关项目生成的DLL文件拷贝到当前站点运行目录的bin目录
    -->
		<!--下面的连接用于SQL SERVER -->
		<!--<add name="default" connectionString="Data Source=.;Initial Catalog=SuperMarket;Integrated Security=True" providerName="SqlServer"/>-->
		<!--<add name="default" connectionString="Data Source=(LocalDB)\v11.0;AttachDbFilename=|DataDirectory|SqlSuperMarket.mdf;Integrated Security=True"  providerName="SqlServer"/>-->
		<!--下面的连接用于32位Windows上的SQLite -->
		<!--<add name="default" connectionString="Data Source=|DataDirectory|SuperMarket3.db" providerName="PWMIS.DataProvider.Data.SQLite,PWMIS.SQLiteClient"/>-->
		<!--下面的连接用于64位Linux上的SQLite -->
		<!--<add name="default" connectionString="Data Source=|DataDirectory|SuperMarket.db" providerName="PWMIS.DataProvider.Data.Sqlite,PWMIS.SQLiteClient.Mono40x64"/>-->
		<!--下面的连接用于32位Linux上的SQLite -->
		<!--<add name="default" connectionString="Data Source=|DataDirectory|SuperMarket32.db" providerName="PWMIS.DataProvider.Data.Sqlite,PWMIS.DataProvider.SQLite.Mono40x32"/>-->
		<!--下面的连接用于MySQL -->
		<!--<add name="default" connectionString="server=10.0.0.1;User Id=pdfnet;password=pdfnet2015;CharSet=utf8;DataBase=test;Allow Zero Datetime=True" providerName="PWMIS.DataProvider.Data.MySQL,PWMIS.MySqlClient"/>-->
		<!--下面的连接用于Access -->
		<!--<add name="AccessDb" connectionString="Provider=Microsoft.ACE.OLEDB.12.0;Jet OLEDB:Engine Type=6;Data Source= |DataDirectory|SuperMarket.accdb" providerName="Access"/>-->
		<add name="accessConn"
		     connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|\SuperMarket.mdb"
		     providerName="Access" />
	</connectionStrings>
	<!--
    有关 web.config 更改的说明，请参见 http://go.microsoft.com/fwlink/?LinkId=235367。

    可在 <httpRuntime> 标记上设置以下特性。
      <system.Web>
        <httpRuntime targetFramework="4.8" />
      </system.Web>
  -->
	<system.web>
		<!-- 
            设置 compilation debug="true" 可将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
		<compilation debug="true" targetFramework="4.8" />
		<!--
            通过 <authentication> 节可以配置 ASP.NET 用来 
            识别进入用户的
            安全身份验证模式。 
        -->
		<authentication mode="Windows" />
		<!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" />
	</system.web>
	<!-- 
        在 Internet 信息服务 7.0 下运行 ASP.NET AJAX 需要 system.webServer
        节。对早期版本的 IIS 来说则不需要此节。
    -->
</configuration>